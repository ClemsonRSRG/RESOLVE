/*
 * AbstractProofRuleApplication.java
 * ---------------------------------
 * Copyright (c) 2017
 * RESOLVE Software Research Group
 * School of Computing
 * Clemson University
 * All rights reserved.
 * ---------------------------------
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */
package edu.clemson.cs.rsrg.vcgeneration.proofrules;

import edu.clemson.cs.rsrg.vcgeneration.vcs.AssertiveCodeBlock;
import java.util.Deque;
import java.util.LinkedList;

/**
 * <p>This is the abstract base class for all the {@code Proof Rules}.</p>
 *
 * @author Yu-Shan Sun
 * @version 1.0
 */
public abstract class AbstractProofRuleApplication
        implements
            ProofRuleApplication {

    // ===========================================================
    // Member Fields
    // ===========================================================

    /**
     * <p>A double ended queue that contains all the assertive code blocks
     * that was either passed in or generated by the {@code Proof Rule}.</p>
     */
    protected final Deque<AssertiveCodeBlock> myAssertiveCodeBlocks;

    // ===========================================================
    // Constructors
    // ===========================================================

    /**
     * <p>An helper constructor that creates a double ended queue to
     * store the {@link AssertiveCodeBlock} that was passed in as well
     * as any generated from a class that inherits from
     * {@code AbstractProofRuleApplication}.</p>
     *
     * @param block The assertive code block that the subclasses are
     *              applying the rule to.
     */
    protected AbstractProofRuleApplication(AssertiveCodeBlock block) {
        myAssertiveCodeBlocks = new LinkedList<>();
        myAssertiveCodeBlocks.add(block);
    }

    // ===========================================================
    // Public Methods
    // ===========================================================

    /**
     * <p>This method returns the list of {@link AssertiveCodeBlock AssertiveCodeBlock(s)}
     * that resulted from applying the {@code Proof Rule}.</p>
     */
    @Override
    public final Deque<AssertiveCodeBlock> getAssertiveCodeBlocks() {
        return myAssertiveCodeBlocks;
    }

}