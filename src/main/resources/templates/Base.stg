/**
 * Base.stg
 *
 * Copyright (c) 2014
 * RESOLVE Software Research Group
 * School of Computing
 * Clemson University
 * All rights reserved.
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */
group Base;

// model = AST
// controller = TreeWalkerVisitor
// view = Base.stg/C.stg/Java.stg
module(directives, includes, structures, variables, functions, eof) ::= <<
<directives ; separator = "\n">

<includes   ; separator = "\n">
<variables  ; separator = "\n">

<structures ; separator = "\n">
<functions>
<eof>
>>

function_decl(modifier, type, name, parameters, stmts) ::= <%
    <modifier> <type> <name>(<parameters; separator = ", ">);%>

var_decl(modifier, type, name, init) ::= "<modifier> <type> <name> = <init>;"

function_def(modifier, type, name, parameters, facilities, variables = [],
                                                            stmts = []) ::= <<
<modifier> <type> <name>(<parameters; separator = ", ">) {
    <facilities ; separator = "\n">
	<variables  ; separator = "\n">
	<stmts      ; separator = "\n">
}>>

parameter(type, name) ::= "<type> <name>"

unqualified_type(name) ::= "<name>"

return_stmt(name) ::= "return <name>;"