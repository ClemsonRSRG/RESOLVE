# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # This job checks that our Java files have the proper license header.
  check_license:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run License Validation Check
        run: mvn license:check
  # This job checks that our code styles are the same.
  check_style:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Formatter Validation Check
        run: mvn formatter:validate
  # This job runs our JUnit tests.
  junit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run JUnit Tests
        run: mvn test -B
  # This job runs the RESOLVE compiler to analyze files that we know to be working.
#  run_compiler_analyze_files:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run Compiler to Analyze Workspace Files
#        run: |
#          # Build the RESOLVE compiler as a jar
#          mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
#
#          # Make the script runnable
#          chmod +x "${GITHUB_WORKSPACE}/bin/runAnalyzeTests"
#
#          # Analyze the specified RESOLVE files
#          "${GITHUB_WORKSPACE}/bin/runAnalyzeTests"
#
#          # Delete temporary folder
#          rm -rf "${GITHUB_WORKSPACE}/temp"
  # This job runs the RESOLVE compiler to build a runnable jar from files that we know to be working.
#  run_compiler_buildjar:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run Compiler to Build Jars from Workspace Files
#        run: |
#          # Build the RESOLVE compiler as a jar
#          mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
#
#          # Make the script runnable
#          chmod +x "${GITHUB_WORKSPACE}/bin/runBuildJarTests"
#
#          # Build a Jar from the specified RESOLVE files
#          "${GITHUB_WORKSPACE}/bin/runBuildJarTests"
#
#          # Delete temporary folder
#          rm -rf "${GITHUB_WORKSPACE}/temp"
  # This job runs the RESOLVE compiler to prove files that we know to be working.
#  run_compiler_prove_files:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Run Compiler to Prove Workspace Files
#        run: |
#          # Build the RESOLVE compiler as a jar
#          mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
#
#          # Make the script runnable
#          chmod +x "${GITHUB_WORKSPACE}/bin/runProveTests"
#
#          # Prove the specified RESOLVE files
#          "${GITHUB_WORKSPACE}/bin/runProveTests"
#
#          # Delete temporary folder
#          rm -rf "${GITHUB_WORKSPACE}/temp"